on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches: [master, main]
    types: [opened, synchronize]
jobs:
  simple_deployment_pipeline:
    timeout-minutes: 60
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies for client
        run: npm install
        working-directory: client
      - name: Install dependencies for server
        run: npm install
        working-directory: server
      - name: Check style
        run: |
          npm run lint-client   # lint for client
          npm run lint-server   # lint for server
      - name: Build client and server
        run: npm run build
      - name: Run unit tests
        run: npm test
      - name: Run e2e server tests
        run: npm run e2etest
        # NO E2E TESTS  
      # - name: Install Playwright Browsers
      #   run: npx playwright install --with-deps
      # - name: Run Playwright tests
      #   run: npx playwright test
      # - uses: actions/upload-artifact@v4
      #   if: always()
      #   with:
      #       name: playwright-report
      #       path: playwright-report/
      #       retention-days: 30
      
      # NO DEPLOYMENT
      # - if: ${{ github.event_name == 'push' && (contains(join(github.event.commits.*.message, ' '), '#skip') == false) }}
      #   name: Trigger deployment
      #   run: curl https://api.render.com/deploy/srv-${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}
      - name: Github variables usage
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_WORKFLOW: ${{ github.workflow }}
          GH_REF: ${{ github.ref }}
          GH_ACTOR: ${{ github.actor }}
          GITHUB_JOB: ${{ github.job }}
          GITHUB_EVENT_PATH: ${{ github.event_path }}
          GITHUB_ACTION: ${{ github.action }}
          #GITHUB_ACTIONS: ${{ github.actions }}
          GITHUB_EVENT: ${{ toJson(github.event) }}
          #TM_STAMP: ${{ toJson(github.event.commits.*.timestamp) }} 
        run: |
          echo "GITHUB_REPOSITORY: ${{ github.repository }}"
          echo "Github actor from environment variable - long format: ${{env.GH_ACTOR}}"
          echo "Github actor from environment variable - short format: $GH_ACTOR"
      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_USERNAME: PetriA
          DISCORD_EMBEDS: '[{"title":"Commit", "color": 40811"}]'
          #DISCORD_EMBEDS: '[{"title":"Commit", "color": 40811, "timestamp": ${{toJson(github.event.commits.*.timestamp)}} }]'
        uses: Ilshidur/action-discord@0c4b27844ba47cb1c7bee539c8eead5284ce9fa9
        with:
          args: "A new version of Patientor deployed"

      - name: Notify successful deployment
        uses: rjstone/discord-webhook-notify@v1
        if: ${{ success() }}
        with:
          severity: info
          text: 'Patientor BUILD succeeded :-)'
          description: ""
          details: ""
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
        env:
          DEBUG: true  # Enable debug mode to log the response
      - name: Notify deployment failure
        uses: rjstone/discord-webhook-notify@v1
        if: ${{ failure() }}
        with:
          severity: error
          text: 'Patientor BUILD failed.'
          description: "Initiator: ${{ github.actor }}"
          details: "Repo: ${{ github.repository }}"
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
  tag_release:
    needs: [simple_deployment_pipeline]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - if: ${{ github.event_name == 'push' && (contains(join(github.event.commits.*.message, ' '), '#skip') == false)}}
        name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.70.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
          DRY_RUN: false