name: Patientor CI/CD pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  simple_deployment_pipeline:
    timeout-minutes: 60
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies in root for e2e tests
        run: npm install
      - name: Install dependencies for client
        run: npm install
        working-directory: client
      - name: Install dependencies for server
        run: npm install
        working-directory: server
      - name: Check style
        run: |
          npm run lint-client   # lint for client
          npm run lint-server   # lint for server
      - name: Build client and server
        run: npm run build
      - name: Run unit tests
        run: npm test
      - name: Run e2e server tests
        run: npm run e2etest
      
      # E2E TESTS  
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: npx playwright test
      - uses: actions/upload-artifact@v4
        if: always()
        with:
            name: playwright-report
            path: playwright-report/
            retention-days: 30
      
      # DEPLOYMENT
      - if: ${{ github.event_name == 'push' && (contains(join(github.event.commits.*.message, ' '), '#skip') == false) }}
        name: Trigger deployment
        run: curl https://api.render.com/deploy/srv-${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}

      # DISCORD NOTIFICATIONS
      - name: Build success discord notification
        if: ${{ success() && (contains(join(github.event.commits.*.message, ' '), '#discord') == true) }}
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_USERNAME: PetriA
          DISCORD_EMBEDS: >
            [{
                "type": "Info",
                "title": "Patientor build",
                "description": "Successful build from repo: ${{ github.repository }}",
                "color": 40811
            }]
        uses: Ilshidur/action-discord@0c4b27844ba47cb1c7bee539c8eead5284ce9fa9
        with:
          args: "A new version of Patientor deployed by ${{ github.actor }}."

      - name: Build failure discord notification
        if: ${{ failure() || (contains(join(github.event.commits.*.message, ' '), '#discord_failure')) }}
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_USERNAME: PetriA
          DISCORD_EMBEDS: >
            [{
              "type": "Error",
              "title": "Patientor build",
              "description": "Failed build from repo: ${{ github.repository }}",
              "fields":[{
                    {"name":"Commit Message","value":"[${{ github.sha }}](https://github.com/${{github.repository}}/commit/${{github.sha}}) - `${{github.event.head_commit.message}}`"},
                    {"name":"Changed Files","value":"${{ steps.changed-files.outputs.all_changed_files }}"},
                    {"name":"Author","value":"[${{github.event.head_commit.author.name}}](https://github.com/${{github.actor}})"
                }],
              "color": 16711680,
              "url":"https://github.com/${{github.repository}}/commit/${{github.sha}}",
              "timestamp":"${{github.event.head_commit.timestamp}}",
              "footer":{"text":"${{github.event.head_commit.timestamp}}"}
            }]
        uses: Ilshidur/action-discord@0c4b27844ba47cb1c7bee539c8eead5284ce9fa9
        with:
          args: "Failed to build a new version of Patientor by ${{ github.actor }}."
  
  tag_release:
    needs: [simple_deployment_pipeline]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - if: ${{ github.event_name == 'push' && (contains(join(github.event.commits.*.message, ' '), '#skip') == false)}}
        name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.70.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
          DRY_RUN: false